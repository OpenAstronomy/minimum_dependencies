[project]
name = "minimum-dependencies"
description = "Get the minimum dependencies of a Python package"
readme = 'README.rst'
license = { file = 'LICENSE' }
authors = [{ name = 'William Jamieson', email = 'help@stsci.edu' }]
requires-python = '>=3.8'
classifiers = [
  'Development Status :: 5 - Production/Stable',
  "License :: OSI Approved :: BSD License",
  'Programming Language :: Python',
  "Programming Language :: Python :: 3 :: Only",
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
]
dynamic = [
  'version',
]
dependencies = [
  "importlib-metadata>=4.11.4",
  "packaging>=23",
  "requests>=2.25",
]
[project.optional-dependencies]
test = [
  "pytest>=6",
  "pytest-doctestplus>=0.12",
]
testing_no_exist = [
  # These are for testing purposes only
  "numpy>=999.999.999",
]
testing_no_pin = [
  # These are for testing purposes only
  "numpy",
]
testing_other = [
  # These are for testing purposes only
  "astropy[all]>=5",
  "numpy>=1.20",
  "scipy>=1.6",
]
testing_url = [
  # These are for testing purposes only
  "jwst[test]@ git+https://github.com/spacetelescope/jwst.git@master",
  "stdatamodels@ git+https://github.com/spacetelescope/stdatamodels.git@master",
]
[project.scripts]
minimum_dependencies = 'minimum_dependencies._script:main'

[build-system]
build-backend = 'setuptools.build_meta'
requires = [
  "setuptools>=60",
  "setuptools_scm[toml]>=3.4",
  "wheel",
]

[tool.setuptools.packages.find]
where = ['src']

[tool.setuptools_scm]
write_to = "src/minimum_dependencies/_version.py"

[tool.black]
line-length = 88
force-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.pytest_cache
    | \.tox
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
filter_files = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ['src', 'README.rst']
minversion = 4.6
norecursedirs = ['build']
doctest_plus = 'enabled'
filterwarnings = [
    'error',
    'ignore:numpy.ndarray size changed:RuntimeWarning',
]
# Configuration for pytest-doctestplus
text_file_format = 'rst'
addopts = '--color=yes --doctest-rst'

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',
    # Don't complain about packages we have installed
    'except ImportError',
    # Don't complain if tests don't hit assertions
    'raise AssertionError',
    'raise NotImplementedError',
    # Don't complain about script hooks
    'def main\(.*\):',
    # Ignore branches that don't pertain to this version of Python
    'pragma: py{ ignore_python_version }',
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = ["ALL"]
extend-ignore = ["I"]

[tool.ruff.per-file-ignores]
"test_*.py" = ["S101", "ANN"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.codespell]
skip="*.pdf,.tox,build,./tags,.git"
# ignore-words-list="""
# """
